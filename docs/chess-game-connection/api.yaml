openapi: 3.0.0
info:
  title: Authentication Service
  description: |
    A service which handles the registration and authentication of the users
    of an application.
    
    ### External Links
    - [GitHub Organization](https://github.com/ldss-project)
    - [GitHub Repository](https://github.com/ldss-project/authentication-service)
  version: 0.4.2
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jahrim/AuthenticationService/0.4.2
paths:
  '/':
    get:
      tags:
        - Utility
      summary: Welcome
      description: Welcome a user to this service.
      operationId: welcome
      security: []
      responses:
        '200':
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
                example: Welcome to the Authentication Service!
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
  '/user/{username}/sign-in':
    post:
      tags:
        - Authentication Management
      summary: Sign in
      description: Register a new user with the specified username, email and password.
      operationId: sign-in
      security: []
      parameters:
        - in: path
          name: username
          description: the specified user
          schema:
            type: string
            example: Paul
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: paul@chessgame.com
                    password:
                      type: string
                      example: paulSecretPassword
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    $ref: '#/components/schemas/Session'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: chess-app-session=<url-encoded-json-session>; SameSite=None; Secure; Max-Age=1800
        '400':
          description: malformed input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedInputException'
        '403':
          description: username already taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameAlreadyTakenException'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
  '/user/{username}/log-in':
    post:
      tags:
        - Authentication Management
      summary: Log in
      description: Authenticate a user with the specified username and password.
      operationId: log-in
      security: []
      parameters:
        - in: path
          name: username
          description: the specified user
          schema:
            type: string
            example: Paul
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    password:
                      type: string
                      example: paulSecretPassword
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    $ref: '#/components/schemas/Session'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: chess-app-session=<url-encoded-json-session>; SameSite=None; Secure; Max-Age=1800
        '400':
          description: malformed input, incorrect password
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MalformedInputException'
                  - $ref: '#/components/schemas/IncorrectPasswordException'
              examples:
                malformed-input:
                  value:
                    type: MalformedInputException
                    message: string
                incorrect-password:
                  value:
                    type: IncorrectPasswordException
                    message: string
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
  '/user/{username}/log-out':
    post:
      tags:
        - Authentication Management
      summary: Log out
      description: Revoke the token of the specified user.
      operationId: log-out
      security:
        - cookieSession: []
      parameters:
        - in: path
          name: username
          description: the specified user
          schema:
            type: string
            example: Paul
          required: true
        - in: cookie
          name: chess-app-session
          description: the session of the specified user
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
          headers:
            Set-Cookie:
              schema:
                type: string
                example: chess-app-session=<url-encoded-json-session>; SameSite=None; Secure; Max-Age=0
        '403':
          description: user not authorized, token expired
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserNotAuthorizedException'
                  - $ref: '#/components/schemas/TokenExpiredException'
              examples:
                user-not-authorized:
                  value:
                    type: UserNotAuthorizedException
                    message: string
                token-expired:
                  value:
                    type: TokenExpiredException
                    message: string
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
  '/user/{username}/profile':
    get:
      tags:
        - Profile Management
      summary: Get user profile
      description: Get the profile information of the specified user.
      operationId: get-user-profile
      security:
        - cookieSession: []
      parameters:
        - in: path
          name: username
          description: the specified user
          schema:
            type: string
            example: Paul
          required: true
        - in: cookie
          name: chess-app-session
          description: the session of the specified user
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '403':
          description: user not authorized, token expired
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserNotAuthorizedException'
                  - $ref: '#/components/schemas/TokenExpiredException'
              examples:
                user-not-authorized:
                  value:
                    type: UserNotAuthorizedException
                    message: string
                token-expired:
                  value:
                    type: TokenExpiredException
                    message: string
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
  '/user/{username}/password':
    put:
      tags:
        - Profile Management
      summary: Update password
      description: Update the password of the specified user with the specified password.
      operationId: update-password
      security:
        - cookieSession: []
      parameters:
        - in: path
          name: username
          description: the specified user
          schema:
            type: string
            example: Paul
          required: true
        - in: cookie
          name: chess-app-session
          description: the session of the specified user
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    password:
                      type: string
                      example: paulNewSecretPassword
        required: true
      responses:
        '200':
          description: successful operation
        '403':
          description: user not authorized, token expired
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserNotAuthorizedException'
                  - $ref: '#/components/schemas/TokenExpiredException'
              examples:
                user-not-authorized:
                  value:
                    type: UserNotAuthorizedException
                    message: string
                token-expired:
                  value:
                    type: TokenExpiredException
                    message: string
        '404':
          description: user not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFoundException'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exception'
components:
  schemas:
    Token:
      type: object
      properties:
        id:
          type: string
          example: '9476a1b4-bfe5-4ebb-a7f6-f3d56ff7ddc3'
        expiration:
          type: object
          properties:
            '$date':
              type: string
              example: '2023-09-03T08:05:05.12Z'
    Session:
      type: object
      properties:
        username:
          type: string
          example: Paul
        token:
          $ref: '#/components/schemas/Token'
    User:
      type: object
      properties:
        username:
          type: string
          example: Paul
        email:
          type: string
          example: paul@chessgame.com
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    MalformedInputException:
      type: object
      properties:
        type:
          type: string
          example: MalformedInputException
        message:
          type: string
    IncorrectPasswordException:
      type: object
      properties:
        type:
          type: string
          example: IncorrectPasswordException
        message:
          type: string
    UsernameAlreadyTakenException:
      type: object
      properties:
        type:
          type: string
          example: UsernameAlreadyTakenException
        message:
          type: string
    TokenExpiredException:
      type: object
      properties:
        type:
          type: string
          example: TokenExpiredException
        message:
          type: string
    UserNotAuthorizedException:
      type: object
      properties:
        type:
          type: string
          example: UserNotAuthorizedException
        message:
          type: string
    UserNotFoundException:
      type: object
      properties:
        type:
          type: string
          example: UserNotFoundException
        message:
          type: string
  securitySchemes:
    cookieSession:
      type: apiKey
      in: cookie
      name: chess-app-session